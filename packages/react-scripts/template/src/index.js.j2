import React from 'react';
import ReactDOM from 'react-dom';
{% if redux -%}
import { Provider } from 'react-redux';
import { createStore, applyMiddleware } from 'redux';
import thunkMiddleware from 'redux-thunk';
import promiseMiddleware from 'redux-promise';
import { createLogger } from 'redux-logger';
{%- endif %}
{% if router and redux -%}
import { routerMiddleware } from 'react-router-redux';
import createHistory from 'history/createHashHistory';
{%- endif %}

import App from './App';
{% if redux -%}
import reducer from './modules';
{%- endif %}

{% if bootstrap -%}
import 'bootstrap/dist/css/bootstrap.css';
{%- endif %}
{% if fontawesome -%}
import 'font-awesome/css/font-awesome.css';
{%- endif %}

{% if router and redux -%}
export const history = createHistory();

let middleware = [ thunkMiddleware, promiseMiddleware, routerMiddleware(history) ];
{% elif redux -%}
let middleware = [ thunkMiddleware, promiseMiddleware ];
{%- endif %}
{% if redux -%}
if(process.env.NODE_ENV !== 'production') {
    middleware.push(createLogger());
}
const createStoreWithMiddleware = applyMiddleware(...middleware)(createStore);

const store = createStoreWithMiddleware(reducer);
{%- endif %}

ReactDOM.render(
  {% if redux -%}
  <Provider store={store}>
    <App />
  </Provider>,
  {%- else -%}
  <App />,
  {%- endif %}
  document.getElementById('root')
);
